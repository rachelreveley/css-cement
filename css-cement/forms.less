// ###############################
// forms.less
// ###############################

// -------------------- //
// form
// -------------------- //
// basic layout
	.form {float: left; width: 100%;
		.clearfix;
		& .box {border: 0;}
		& ol li fieldset {display: block; margin-bottom: 15px; width: 100%; border: 0;}

		& ol li,
		& .gs700 ol li {margin-bottom: 0; padding: 0 0 0 36%; text-indent: -32%; border: 0; float: none; width: 100% !important; font-size: 0; .box-sizing(border-box);
			& *{text-indent: 0; font-size: @form-font-size; display: inline-block; vertical-align: middle;}
		}

		& li > textarea,
		& .gs700 li > textarea,
		& select[multiple],
		& select[size]{vertical-align: top;}

// legends paras & labels
		& legend {white-space: normal; margin-right: @forms-gutter;}
		& legend + *,
		& legend + input[type=hidden] + * {-webkit-margin-top-collapse: separate; margin-top: 5px;} // adds a litle separation between legend and next element in webkiT, firefox behaves differently.
		& label,
		& .label,
		& .logic {width: 50%; margin-right: 0; text-align: right; padding: 0 @forms-gutter 0 0; margin-bottom: 10px;
			.box-sizing(border-box);
		}
		& .logic {padding-bottom: 0.5em;}

		& label img {vertical-align: middle;}
		& label strong + span {display: block;}
		& ol li p label,
		& ol li p .note,
		& .optional {width: auto; max-width: 100%; margin: 0 @forms-col 0 0; text-align: left;/*possible conflict - used on prod suggest form*/}

		& label:first-child,
		& .label:first-child,
		& p:first-child,
		& p:first-child + label {text-indent: 0; margin-left: 0; display: inline-block; -moz-box-sizing: border-box;}

		& p {display: block; margin: 0 @forms-col .5em -56%;
			&:first-child {margin-left: -56%; display: block; max-width: 150%; width: 150%;
				& + label {margin-left: -50% !important;}
			}
			&:only-child {width: 150%;}
			&:last-child {margin-bottom: .5em;}
			& + textarea.gs700 {margin-left: -56%;}
		}

// Labels after input such as bolean inputs and erros
		& input + p {display: inline-block; width: 160%;}
		& ol li input ~ label,
		& ol li textarea ~ label,
		& ol li select ~ label
///		,
///		& .vertical li input ~ label,
///		& .vertical li textarea ~ label,
///		& .vertical li select ~ label 
		{width: 90%; max-width: none; text-align: left; padding: 0;}

// Notes after inputs
		& .note {color: @text6; margin-bottom: 10px; margin-right: 10px;
			& a:first-child {margin-left: 0 !important;}
		}
		& .summary {font-size: 13px; font-weight: bold; margin-bottom: 2em!important;}

// Indent buttons
		& .button:first-child,
		& a:first-child {margin-left: 50%;}

// Webkit disagrees with all other browsers on what constitutes baseline on textareas
		& textarea,
		& label[for="newsletter"] {vertical-align: top;}

// Inputs
		& input,
		& button,
		& select,
		& textarea,
		& span.readonly {margin-bottom: 10px; margin-right: 4%;}
		& select {margin-right:@forms-col;}

// Text inputs
		& input[type=text],
		& input[type=password],
		& input[type=email],
		& input[type=number],
		& input[type=date],
		& input[type=range],
		& textarea,
		& span.readonly {width: 50%; padding: 1px 4px 2px; background-color: @forms-input-bg; box-shadow: @forms-input-shadow; border: @forms-input-border;
			.border-radius(@forms-input-border-radius); .box-sizing(border-box);
		}

// read only
		& span.readonly,
		& input[readonly],
		& input[readonly]:focus {border-color:@bg1 !important; background-color:@bg1; color: @text2; box-shadow: none !important; pointer-events: none;}

// select menus
		& optgroup,
		& option {display: block !important;}

// bolean inputs
		& input[type=checkbox],
		& input[type=radio]{clear: left; margin-right: 10px !important;  margin-bottom: 10px; position: relative; background-color: transparent !important;}

// min width on text inputs when no direct gs class used
		& input[type=text]:not([class*="gs"]),
		& input[type=password]:not([class*="gs"]),
		& input[type=email]:not([class*="gs"]),
		& input[type=number]:not([class*="gs"]),
		& input[type=date]:not([class*="gs"]),
		& input[type=range]:not([class*="gs"]),
		& select,
		& textarea,
		& span.readonly {min-width: 160px;}
		& input.gs40 {min-width: 40px}
		& input.gs100 {min-width: 100px}
		& .button {margin-bottom: 10px;}

// Prefixes and separators for currency inputs, dates etc
		& .prefix,
		& .suffix {position: relative; z-index: 1; text-align: center;}
		& .prefix {border-right: 1px solid #ccc; left: 34px; width: 31px; margin: 0 0 10px -33px!important; padding: 2px 0 1px 2px;}
		& .suffix {border-left: 1px solid #ccc; width: 31px; padding: 2px 0 1px 2px; left: -64px; text-align: right; margin: 0 0 10px; color: @text;}
		& .separator {margin: 0 6px 10px -6px;}
		& .prefix + input {padding-left: 35px;}
		& .suffix + input {padding-right: 35px; margin-left: -33px;}

// interaction
		& li input[type=text]:focus,
		& li input[type=password]:focus,
		& li input[type=email]:focus,
		& li input[type=number]:focus,
		& li input[type=date]:focus,
		& li input[type=range]:focus,
		& li textarea:focus {border: @forms-input-focus-border; background-color: @forms-input-focus-bg; box-shadow: @forms-input-focus-shadow;}
		& input.button:focus {box-shadow: 0 0 transparent;}

// buttongroups
	.buttongroup {margin: 0 @forms-col 10px (@forms-col * 12);
		& .button {margin: 0 -3px 0 0 !important;
			&:last-child {margin-right: 0 !important;}
			&:not(:last-child){border-top-right-radius: 0 !important; border-bottom-right-radius: 0 !important;}
			&:not(:first-child){border-top-left-radius: 0 !important; border-bottom-left-radius: 0 !important;}
		}
	}

// required fields
		& [required=true],
		& [class="required"] ~ input,
		& [class="required"] ~ textarea,
		& [class="required"] ~ select {border: @forms-input-required-border; background-color: @forms-input-required-bg;}
		& [title="Required"] label:after {content: "*"}
		& [title="Required"] [type=radio] ~ label:after,
		& [title="Required"] [type=checkbox] ~ label:after {content: "";}
		& label.required {font-weight: bold;}

// Errors
		& ol li label.error,
		& ol li.error label {color: @forms-error-text;}
		& ol li label.error {width: auto !important;}
		& .error ~ .note,
		& li.error .note {display: none;}
		& input.error,
		& textarea.error,
		& li.error input,
		& li.error textarea {border-color: @forms-error-border!important; background-color: lighten(@forms-error-bg, 45%)!important; color: @forms-error-text;}

// fat forms
		&.fatform,
		& .fatform {
			& li {padding: 10px;}
			& input[type=text],
			& input[type=password],
			& input[type=email],
			& input[type=number],
			& input[type=date],
			& input[type=range],
			& textarea,
			& select {padding: 10px; font-size: 20px;}
			& input[type="submit"]{font-size: 20px;}
			& label,
			& span {font-size: 20px;}
		}

// vertical forms
		& .vertical p {margin-left: 0; max-width: 100%;}
		& .vertical p + textarea.gs700 {margin-left: 0; width: 97.2222% !important;}
		& .vertical {
			& input[type=file]+input[type=file],
			& buttongroup {margin-left: 0;}
			& label,
			p label {width: 90%; text-align: left;}
			& .button,
			& .button:first-child,
			& a,
			& input[type=checkbox],
			& input[type=radio]{margin-left: 0;}
			& input[type="text"],
			& input[type="password"],
			& input[type="email"],
			& textarea,
			& span.readonly {width: 95%;}
			& .note {max-width: 100%; margin: -5px 0 8px 0;}
			& input[type="checkbox"] + label,
			& input[type="radio"] + label {margin-left: -30px; padding-left: 30px; width: 100% !important;}
		}

// 2 column forms (in progress)
		& .wide {
			& label {width: 47.4%;}
			& input,
			& select,
			& textarea,
			& span.readonly {width: 47%;}
			& input[type="checkbox"] + label,
			& input[type="radio"] + label {width: 91%;}
				& .button:first-child,
				& a:first-child,
				& input[type="checkbox"],
				& input[type="radio"],
				& input[type="file"] + input[type="file"]{margin-left: 0;}
				& .note {max-width: 45%;}
				& input[type=submit] + .note {display: block; margin-top: 10px;}
				& input[type=submit] + .note a {text-decoration: underline;}
		}

// inline forms
		& .inline {
			& li {display: inline;}
			& label,
			& .note,
			& input,
			& input + label {width: auto; display: inline-block; margin-bottom: 5px;}
			& input,
			& label {margin-left: 0; margin-right: @forms-col;}
			& label {padding: 0 (@forms-col / 2) 0 0!important;}
		}
// inline vertical forms
		& .inline-vertical {
			& li {width: auto !important; display: inline-block;}
			& label,
			& .note,
			& input,
			& input + label {width: auto; display: block; text-align: left; margin-bottom: 5px;}
			& input,
			& label {margin-left: 0; margin-right: @forms-col;}
			& label {padding: 0 (@forms-col / 2) 0 0!important;}
		}
		& .hidden-labels {
			& label {.hide-text; display: inline-block; margin: 0 !important; padding: 0 !important;}
			& input {margin-right: 10px; padding-right: 10px;
				&.gs700 {width:  calc(~"100% - 10px") !important;}
				&.gs640 {width: calc(~"91.667% - 10px") !important;}
				&.gs580 {width: calc(~"83.333% - 10px") !important;}
				&.gs520 {width: calc(~"75% - 10px") !important;}
				&.gs460 {width: calc(~"66.667% - 10px") !important;}
				&.gs400 {width: calc(~"58.333% - 10px") !important;}
				&.gs340 {width: calc(~"50% - 10px") !important;}
				&.gs280 {width: calc(~"41.667% - 10px") !important;}
				&.gs220 {width: calc(~"33.333% - 10px") !important;}
				&.gs160 {width: calc(~"25% - 10px") !important;}
				&.gs100 {width: calc(~"16.667% - 10px") !important;}
				&.gs40 {width: calc(~"8.333% - 10px") !important;}
			}
		}
// override indenting style for inline, vertical and inline-vertical fields as well as nested fieldsets.
		& fieldset fieldset li,
		& .vertical li,
		& .inline li,
		& .inline-vertical li {padding-left: 0 !important; text-indent: 0;
			.box-sizing(border-box);
			& label:first-child {text-indent: 0;}
		}
		& .vertical p:first-child {margin-left: 0; display: block; max-width: 100%;}

//Special styled forms
// Boxed forms
		& .hover li,
		& .dividers li,
		& .bordered li {margin-bottom: 2px; padding-top: 10px; z-index: 1; position: relative;}

	    & .hover li:hover {background-color: @forms-hover-bg;}
		& .dividers li:after {border-bottom: @forms-dividers-border; margin-left: -56%; width: 152%;
			.pseudo;
		}
		& .bordered {position: relative; background-color: @forms-bordered-bg;
	    	.clearfix;
			&:before {border: @forms-bordered-border; position: absolute; top: 0; left: 0; bottom: 0; right: @forms-gutter; z-index: 0; pointer-events: none;
	    		.pseudo;
	    	}
			& legend {padding: 10px 0 0 12px !important;}
	    	& .note {margin-right: 20px;}
	    	.buttongroup {width: auto !important; background-color: @forms-bordered-footer; display: block; margin: 0 24px 4px 4px; padding-left: 40%}
		}

// widths
		& input[type=radio],
		& input[type=checkbox]{width: auto;}
	}
// -------------------- //
// New button.button styles with a pseudo element for an arrow
// -------------------- //
// -------------------- //
// construction vars & mixins
// -------------------- //
	@button-padding-h: @button-scale;
	@button-padding-v: (@button-scale / 2.5);
	@sml-button-font-size: (@button-font-size * @sml-scale);
	@std-button-font-size: (@button-font-size * @std-scale);
	@lrg-button-font-size: (@button-font-size * @lrg-scale);
	@double-decker-button-font-size: @button-font-size;
	@sml-border-radius: (@button-border-radius * @sml-scale);
	@std-border-radius: (@button-border-radius * @std-scale);
	@lrg-border-radius: (@button-border-radius * @lrg-scale);
	@double-decker-border-radius: (@button-border-radius * @lrg-scale);
	@sml-padding: (@sml-scale * 5px);
	@std-padding: (@std-scale * 5px);
	@lrg-padding: (@lrg-scale * 5px);
	@double-decker-padding: (@double-decker-scale * 3.4px) (@double-decker-scale / 0.2px);
	@button-secondary-border: @button-border;
	@button-secondary-border-hover: @button-border;
	@button-disabled-border: @button-border;

	.cta-icon(@size: 10) when	  (@cta-icon = arrow) {border: (@size * 0.66) solid transparent; border-left-width: (@size); border-left-color: @cta-icon-fg; vertical-align: baseline; line-height: 0; position: absolute; top: 0; .scale(0.8);}
	.cta-icon(@size: 10) when	  (@cta-icon = arrow-in-circle) {background: url("cta-icon-arrow-in-circle.svg") no-repeat; background-size: 100% 100%; width: @size; height: @size; position: absolute; top: 0;}

// -------------------- //
// general button styles
// -------------------- //
.button {display: inline-block; font-weight: @button-font-weight; vertical-align: bottom; color: @button-fg; margin: 0 10px 10px 0; position: relative; border: @button-border; box-shadow: @button-box-shadow; text-align: left; text-shadow: @button-text-shadow; text-decoration: none; white-space: nowrap; cursor: pointer;
								 font-size: @sml-button-font-size;				line-height: (@sml-scale * 10px);						padding: @sml-padding;						border-radius: @sml-border-radius;
	&.sml			 			{font-size: @sml-button-font-size; 				line-height: (@sml-scale * 10px);						padding: @sml-padding;						border-radius: @sml-border-radius;}
	&.std			  			{font-size: @std-button-font-size;				line-height: (@std-scale * 10px);						padding: @std-padding;						border-radius: @std-border-radius;}
	&.lrg			  			{font-size: @lrg-button-font-size; 				line-height: (@lrg-scale * 10px);						padding: @lrg-padding;						border-radius: @lrg-border-radius;}
	&.double-decker 		  	{font-size: @double-decker-button-font-size; 	line-height: (@double-decker-scale * 10px);				padding: @double-decker-padding;			border-radius: @double-decker-border-radius;}
}

a.button{
	&:link,
	&:visited,
	&:hover,
	&:active {text-decoration: none; color: @button-fg;}
}
// -------------------- //
// colours
// -------------------- //

.button {background-color: @button-bg; color: @button-fg;
	&:hover {background-color: @button-hover-bg; color: @button-hover-fg;}
	&.secondary {background-color: @button-secondary-bg; color: @button-secondary-fg;
		&:hover {background-color: @button-secondary-hover-bg; color: @button-secondary-hover-fg;}
	}
	&[disabled]:before {opacity: 0.7;}
	&[disabled],
	&[disabled]:hover {cursor: default !important; text-shadow: none; background-color: @button-disabled-bg; color: @button-disabled-fg;}
}

// -------------------- //
// buttons with icons
// -------------------- //
.button when not (@cta-icon = disabled) {
	&.arrow,
	&.double-decker {
		&:before {.pseudo;}
	}
}

.button.left-arrow {
	&:before {left: 0;}
}
.button when (@cta-icon-position = left) {
	&:before {left: 0;}
}
.button.right-arrow {
	&:before {right: 0;}
}
.button when (@cta-icon-position = right) {
	&:before {right: 0;}
}

// -------------------- //
// buttons with arrows
// -------------------- //
 .button when (@cta-icon = arrow) {
	&.sml.arrow.left-arrow {				padding-left: ((@sml-scale * 2) * 10px);}
	&.sml.arrow.right-arrow {				padding-right: ((@sml-scale * 2) * 10px);}
	&.sml.arrow.left-arrow,
	&.sml.arrow.right-arrow {
		&:before {	.cta-icon((@sml-scale * 10px));							margin-top: ((@sml-scale / 2) * 9px);}
	}
	&.std.arrow.left-arrow {				padding-left:( (@std-scale * 2) * 10px);}
	&.std.arrow.right-arrow {				padding-right: ((@std-scale  * 2) * 10px);}
	&.std.arrow.left-arrow,
	&.std.arrow.right-arrow {
		&:before {	.cta-icon((@std-scale * 8px));							margin-top: ((@std-scale / 2) * 9px);}
	}
	&.lrg.arrow.left-arrow {				padding-left: ((@lrg-scale  * 2) * 8px);}
	&.lrg.arrow.right-arrow {				padding-right: ((@lrg-scale * 2) * 8px);}
	&.lrg.arrow.left-arrow,
	&.lrg.arrow.right-arrow {
		&:before {	.cta-icon((@lrg-scale * 8px));							margin-top: ((@lrg-scale / 2) * 9px);}
	}
	&.double-decker.left-arrow {			padding-left: ((@double-decker-scale  * 2) * 10px);}
	&.double-decker.right-arrow {			padding-right: ((@double-decker-scale * 2) * 10px);}
	&.double-decker.left-arrow,
	&.double-decker.right-arrow {
		&:before {	.cta-icon((@double-decker-scale * 8px));				margin-top: ((@double-decker-scale / 2) * 9px);}
	}
	&.sml.arrow:not(.right-arrow) when (@cta-icon-position = left) {				padding-left: ((@sml-scale * 2) * 9px);
		&:before {	.cta-icon((@sml-scale * 8px));						margin-top:  ((@sml-scale / 2) * 10px);}
	}
	&.sml.arrow:not(.left-arrow) when (@cta-icon-position = right) {				padding-right: ((@sml-scale * 2) * 9px);
		&:before {	.cta-icon((@sml-scale * 8px));						margin-top: ((@sml-scale / 2) * 10px);}
	}
	&.std.arrow:not(.right-arrow) when (@cta-icon-position = left) {				padding-left: ((@std-scale * 2) * 9px);
		&:before {	.cta-icon((@std-scale * 8px));						margin-top: ((@std-scale / 2) * 10px);}
	}
	&.std.arrow:not(.left-arrow) when (@cta-icon-position = right) {				padding-right: ((@std-scale  * 2) * 9px);
		&:before {	.cta-icon((@std-scale * 8px));						margin-top: ((@std-scale / 2) * 10px);}
	}
	&.lrg.arrow:not(.right-arrow) when (@cta-icon-position = left) {				padding-left: ((@lrg-scale  * 2) * 9px);
		&:before {	.cta-icon((@lrg-scale * 8px)); 						margin-top: ((@lrg-scale / 2) * 10px);}
	}
	&.lrg.arrow:not(.left-arrow) when (@cta-icon-position = right) {				padding-right: ((@lrg-scale * 2) * 9px);
		&:before {	.cta-icon((@lrg-scale * 8px)); 						margin-top: ((@lrg-scale / 2) * 10px);}
	}
	&.double-decker:not(.right-arrow) when (@cta-icon-position = left) {			padding-left: ((@double-decker-scale  * 2) * 9px);
		&:before {	.cta-icon((@double-decker-scale * 8px)); 			margin-top: ((@double-decker-scale / 2) * 11px);}
	}
	&.double-decker:not(.left-arrow) when (@cta-icon-position = right) {			padding-right: ((@double-decker-scale * 2) * 9px);
		&:before {	.cta-icon((@double-decker-scale * 8px)); 			margin-top: ((@double-decker-scale / 2) * 11px);}
	}
}

// -------------------- //
// buttons with arrows within circles
// -------------------- //
.button when (@cta-icon = arrow-in-circle) {
	&.sml.arrow.left-arrow {				padding-left: ((@sml-scale * 2) * 10px);
		&:before {	.cta-icon((@sml-scale * 10px));						margin-top:  ((@sml-scale / 2) * 10px);						margin-left: ((@sml-scale / 2) * 10px);}
	}
	&.sml.arrow.right-arrow {				padding-right: ((@sml-scale * 2) * 10px);
		&:before {	.cta-icon((@sml-scale * 10px));						margin-top: ((@sml-scale / 2) * 10px);						margin-right: ((@sml-scale / 2) * 10px);}
	}
	&.std.arrow.left-arrow{				padding-left:( (@std-scale * 2) * 10px);
		&:before {	.cta-icon((@std-scale * 10px));						margin-top: ((@std-scale / 2) * 10px);						margin-left: ((@std-scale / 2) * 10px);}
	}
	&.std.arrow.right-arrow {				padding-right: ((@std-scale  * 2) * 10px);
		&:before {	.cta-icon((@std-scale * 10px));						margin-top: ((@std-scale / 2) * 10px);						margin-right: ((@std-scale / 2) * 10px);}
	}
	&.lrg.arrow.left-arrow {				padding-left: ((@lrg-scale  * 2) * 10px);
		&:before {	.cta-icon((@lrg-scale * 10px)); 						margin-top: ((@lrg-scale / 2) * 10px); 						margin-left: ((@lrg-scale / 2) * 10px);}
	}
	&.lrg.arrow.right-arrow {				padding-right: ((@lrg-scale * 2) * 10px);
		&:before {	.cta-icon((@lrg-scale * 10px)); 						margin-top: ((@lrg-scale / 2) * 10px);						margin-right: ((@lrg-scale / 2) * 10px);}
	}
	&.double-decker.left-arrow {			padding-left: ((@double-decker-scale  * 2) * 10px);
		&:before {	.cta-icon((@double-decker-scale * 10px)); 			margin-top: ((@double-decker-scale / 2) * 10px); 						margin-left: ((@double-decker-scale / 2) * 10px);}
	}
	&.double-decker.right-arrow {			padding-right: ((@double-decker-scale * 2) * 10px);
		&:before {	.cta-icon((@double-decker-scale * 10px)); 			margin-top: ((@double-decker-scale / 2) * 10px);			margin-right: ((@double-decker-scale / 2) * 10px);}
	}
	&.sml.arrow:not(.right-arrow) when (@cta-icon-position = left) {				padding-left: ((@sml-scale * 2) * 10px);
		&:before {	.cta-icon((@sml-scale * 10px));						margin-top:  ((@sml-scale / 2) * 10px);						margin-left: ((@sml-scale / 2) * 10px);}
	}
	&.sml.arrow:not(.left-arrow) when (@cta-icon-position = right) {				padding-right: ((@sml-scale * 2) * 10px);
		&:before {	.cta-icon((@sml-scale * 10px));						margin-top: ((@sml-scale / 2) * 10px);						margin-right: ((@sml-scale / 2) * 10px);}
	}
	&.std.arrow:not(.right-arrow) when (@cta-icon-position = left) {				padding-left: ((@std-scale * 2) * 10px);
		&:before {	.cta-icon((@std-scale * 10px));						margin-top: ((@std-scale / 2) * 10px);						margin-left: ((@std-scale / 2) * 10px);}
	}
	&.std.arrow:not(.left-arrow) when (@cta-icon-position = right) {				padding-right: ((@std-scale  * 2) * 10px);
		&:before {	.cta-icon((@std-scale * 10px));						margin-top: ((@std-scale / 2) * 10px);						margin-right: ((@std-scale / 2) * 10px);}
	}
	&.lrg.arrow:not(.right-arrow) when (@cta-icon-position = left) {				padding-left: ((@lrg-scale  * 2) * 10px);
		&:before {	.cta-icon((@lrg-scale * 10px)); 						margin-top: ((@lrg-scale / 2) * 10px); 						margin-left: ((@lrg-scale / 2) * 10px);}
	}
	&.lrg.arrow:not(.left-arrow) when (@cta-icon-position = right) {				padding-right: ((@lrg-scale * 2) * 10px);
		&:before {	.cta-icon((@lrg-scale * 10px)); 						margin-top: ((@lrg-scale / 2) * 10px);						margin-right: ((@lrg-scale / 2) * 10px);}
	}
	&.double-decker:not(.right-arrow) when (@cta-icon-position = left) {			padding-left: ((@double-decker-scale  * 2) * 10px);
		&:before {	.cta-icon((@double-decker-scale * 10px)); 			margin-top: ((@double-decker-scale / 2) * 10px); 						margin-left: ((@double-decker-scale / 2) * 10px);}
	}
	&.double-decker:not(.left-arrow) when (@cta-icon-position = right) {			padding-right: ((@double-decker-scale * 2) * 10px);
		&:before {	.cta-icon((@double-decker-scale * 10px)); 			margin-top: ((@double-decker-scale / 2) * 10px);			margin-right: ((@double-decker-scale / 2) * 10px);}
	}
}
// -------------------- //
// Back arrows
// -------------------- //
	&.back-arrow:before {
		-webkit-transform:rotate(180deg);
		   -moz-transform:rotate(180deg);
			-ms-transform:rotate(90deg);
				transform:rotate(180deg);
	}
	&.down-arrow:before {
		-webkit-transform:rotate(90deg);
		   -moz-transform:rotate(90deg);
			-ms-transform:rotate(-15deg);
				transform:rotate(90deg);
	}
	&.up-arrow:before {
		-webkit-transform:rotate(-90deg);
		   -moz-transform:rotate(-90deg);
			-ms-transform:rotate(15deg);
				transform:rotate(-90deg);
	}
// -------------------- //
// Double decker button on product page
// -------------------- //
	.button {
		&.double-decker {font-size: 12px; font-weight: normal;
			& span {display: block; width: 100%;line-height: 1em;}
			& .top-deck {font-size: 22px; font-weight: bold;}
		}
	}

// Removes the extra padding added by the shadow DOM
	button.button::-moz-focus-inner {border: 0; padding: 0;}
	input.button::-moz-focus-inner {border: 0; padding-top: 1px; padding-bottom: 2px;}

// -------------------- //
// Button groups
// -------------------- //

	buttongroup {font-size: 0;
		.button {vertical-align: middle;
			&:not(:last-child) {border-top-right-radius: 0; border-bottom-right-radius: 0; margin-right: 0;}
			&:not(:first-child) {border-top-left-radius: 0; border-bottom-left-radius: 0;}
		}
	}